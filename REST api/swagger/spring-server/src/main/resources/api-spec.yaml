swagger: '2.0'
info:
  version: '0.1.0'
  title: gamification API
  description: An API to gamify application
host: localhost:8080
basePath: /api
schemes:
- http
paths:
  /users:
    get:
      description: retrieve badge and pointscale of a user
      operationId: getUser
      consumes:
      - application/json
      parameters:
      - name: AppInfos
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserInfos'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/User'
  /events:
    post:
      description: generate an event
      operationId: generateEvent
      consumes:
      - application/json
      parameters:
      - name: event
        in: body
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        '201':
          description: success
          schema:
            type: object
  /badges:
    post:
      description: create a badge
      operationId: createBadge
      consumes:
      - application/json
      parameters:
      - name: badge
        in: body
        required: true
        schema:
          $ref: '#/definitions/Badge'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of badges of an application
      operationId: getBadges
      produces:
      - application/json
      parameters:
      - name: AppInfos
        in: body
        required: true
        schema:
          $ref: '#/definitions/AppInfos'
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Badge'
  /PointScales:
    post:
      description: create a pointScale
      operationId: createPointScale
      consumes:
      - application/json
      parameters:
      - name: pointScale
        in: body
        required: true
        schema:
          $ref: '#/definitions/PointScale'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the pointScales of an application
      operationId: getPointScales
      produces:
      - application/json
      parameters:
      - name: AppInfos
        in: body
        required: true
        schema:
          $ref: '#/definitions/AppInfos'
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/PointScale'
  /rules:
    post:
      description: create a rule
      operationId: createRule
      consumes:
      - application/json
      parameters:
      - name: rule
        in: body
        required: true
        schema:
          $ref: '#/definitions/Rule'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of all rules
      operationId: getRules
      produces:
      - application/json
      parameters:
      - name: AppInfos
        in: body
        required: true
        schema:
          $ref: '#/definitions/AppInfos'
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Rule'
definitions:
  User:
    type: object
    properties:
      apiToken:
        type: string
      name:
        type: string
      badges:
        type: array
        items:
          $ref: '#/definitions/Badge'
      pointScales:
        type: array
        items:
          $ref: '#/definitions/PointScale'
      userPointScale:
        type: array
        items:
          $ref: '#/definitions/UserPointScale'

  Event:
    type: object
    properties:
      apiToken:
        type: string
      userId:
        type: string
      name:
        type: string
      properties:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: integer
          required:
          - name
          - value
    required:
    - token
    - idUser
    - eventName

  Badge:
    type: object
    properties:
      apiToken:
        type: string
      name:
        type: string
    required:
    - apiToken
    - name

  PointScale:
    type: object
    properties:
      apiToken:
        type: string
      name:
        type: string
    required:
    - apiToken
    - name
    - value

  Rule:
    type: object
    properties:
      apiToken:
        type: string
      name:
        type: string
      awards:
        type: object
        properties:
          badge:
            type: array
            items:
              type: object
              $ref: '#/definitions/Badge'
          point:
            type: array
            items:
              type: object
              $ref: '#/definitions/PointScale'
          amountofPoint:
            type: array
            items:
              type: integer
      properties:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
            compareOperator:
              type: string
            value:
              type: integer
          required:
          - type
          - compareOperator
          - value
    required:
    - apiToken
    - awards
    - properties
    - name

  AppInfos:
    type: object
    properties:
      apiToken:
        type: string
    required:
    - apiToken

  UserInfos:
    type: object
    properties:
      apiToken:
        type: string
      name:
        type: string
    required:
    - apiToken
    - userId

  UserPointScale:
    type: object
    properties:
      apiToken:
        type: string
      userName:
        type: string
      pointScaleName:
        type: string